type StreamingStrategy = variant {
                           Callback:
                            record {
                              callback:
                               func (CallbackToken) ->
                                (StreamingCallbackHttpResponse) query;
                              token: CallbackToken;
                            };};
type StreamingCallbackHttpResponse = 
 record {
   body: blob;
   token: opt CallbackToken;
 };
type HttpResponse = 
 record {
   body: blob;
   headers: vec HeaderField;
   status_code: nat16;
   streaming_strategy: opt StreamingStrategy;
 };
type HttpRequest = 
 record {
   body: blob;
   headers: vec HeaderField;
   method: text;
   url: text;
 };
type HeaderField = 
 record {
   text;
   text;
 };
type CallbackToken = record {index: nat;};
service : {
  http_request: (HttpRequest) -> (HttpResponse) query;
  streamingCallback: (CallbackToken) -> (StreamingCallbackHttpResponse) query;
}
